/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.8
 * Generated at: 2024-04-10 10:28:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class temperature_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("	<meta charset=\"UTF-8\">\n");
      out.write("	<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("	<title>Conversion</title>\n");
      out.write("	<link rel=\"stylesheet\" href=\"style.css\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	<ul>\n");
      out.write("		<li class=\"notHidden\">\n");
      out.write("			<div class=\"dropdown\">\n");
      out.write("				<button class=\"dropbtn\">Conversion</button>\n");
      out.write("				<div class=\"dropdown-content\">\n");
      out.write("					<a style=\"text-align: left;\" href=\"temperature.jsp\">temperature</a>\n");
      out.write("					<a style=\"text-align: left;\" href=\"poid.jsp\">poid</a>\n");
      out.write("					<a style=\"text-align: left;\" href=\"longueur.jsp\">longueur</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</li>\n");
      out.write("		<li><a href=\"detail.html\">A propos</a></li>\n");
      out.write("	</ul>\n");
      out.write("	<br>\n");
      out.write("	\n");
      out.write("	<form style=\"margin-top: 50px;\" action=\"/Conversion/ConvertT\" method=\"post\">\n");
      out.write("		<input type=\"number\" name=\"number\" id=\"\" required>\n");
      out.write("		<select name=\"unit1\">\n");
      out.write("			<option>Celsuis</option>\n");
      out.write("			<option>Kelvin</option>\n");
      out.write("			<option>Fahrenheit</option>\n");
      out.write("			<option>Rankine</option>\n");
      out.write("		</select>\n");
      out.write("		<label>convertir en </label>\n");
      out.write("		\n");
      out.write("		<select name=\"unit2\">\n");
      out.write("			<option>Celsuis</option>\n");
      out.write("			<option>Kelvin</option>\n");
      out.write("			<option>Fahrenheit</option>\n");
      out.write("			<option>Rankine</option>\n");
      out.write("		</select>\n");
      out.write("		\n");
      out.write("		<input type=\"submit\" value=\"Convertir\" id=\"\">\n");
      out.write("	</form>\n");
      out.write("	\n");
      out.write("		<br><br>\n");
      out.write("	<br><br>\n");
      out.write("	");
	if(request.getAttribute("responsevalue")!= null){
			Object object = request.getAttribute("responsevalue");
		   	Object obj = request.getAttribute("unity");
			
			String str, unity="";
			unity = obj.toString();
			str = object.toString();
		
	
			if (!str.isEmpty())
			{
				out.print("<div>"
					+ "<h1 style=\"margin-top: 50Px;font-size: 2em;\">Response = " + str + " " + unity
					+"</h1></div>");
			}

		}
	
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
